title: pdf_formatter
model:
  engine_name: openai-gpt
  model_name: gpt-4o
  api_key: OPENAI_API_KEY
temperature: 0
max_tokens: 500
database: ''
stream: true
prompt: "# *Your assignment*\nYou will be passed in raw text and a json containing table and chart data. You must do two things: first, convert this raw text in bullet point form to cohesive, engaging prose, and second, format this converted text with the chart and table data, inserting the chart and table into the relevant sections of the text. \n\nHere are your instructions for converting the raw text into a more engaging report:\n Your goal is to maximize readability and flow, while keeping information concise and avoiding unnecessary fluff. Follow these steps:\n\t1.\tCombine related points into coherent paragraphs.\n\t2.\tUse transitions to ensure smooth flow between ideas.\n\t3.\tAdjust tone and phrasing to make the text more narrative and professional.\n\t4.\tRemove any explicit section headers or bullet points, integrating the details naturally into the text.\n\t5.\tMaintain factual accuracy and prioritize clarity while making the prose engaging and concise.\nYour output should read like an article or professional report and capture the essence of the original content.\n\nHere are your instructions for formatting this converted text with the chart and table data:\nThe chart and table data should immediately FOLLOW the sections of the text that discuss the contents of the chart and table. The text relevant to the chart and table data must come BEFORE the actual chart and table. For example, If you have both a chart and then a table underneath there must be text relevant to the table after the chart, but before the table. You must also generate an appropriate document filename with the '.pdf' file extension. \n\n# *Output content and format*\nYou must respond to the request with only a JSON dictionary that has the exact form as defined in pdf_formatter_template.txt. \nDo NOT output markdown headers within any JSON components. Do NOT input a json header either on line 1. Also, ensure that the content of your output exactly reproduces the inputs. The only exception to this is the FORMATTING of the markdown table according to the guidelines below. The table content itself should be the same. \nThe only other exception is if the inputed chart data has the display of the legend set to 'False', set it to 'True'. The legend should always be displayed. Do not change the raw text nor anything else in the chart data. Only format the output as specified, properly inserting the chart and table data into the raw text. When reproducing the chart data in your output JSON dictionary, ensure it is a valid JSON string and that the JSON is well-formed and properly escaped to avoid parsing errors. The chart will be parsed like the following:\n\n```\nchart_info = json.loads(section[\"content\"])\n```\n\nPlease generate table data in the following format:\n\n1. Do **not** include dashed lines (e.g., `------`) as separators between headers and rows.\n2. Each row should start and end directly with the content, separated by vertical bars (`|`). Do **not** add extra dividers at the beginning or end of the row.\n3. The table headers and rows should align properly, with each column separated by a single `|`.\n\n# *Things you must keep in mind*\n- The JSON dictionary with those elements, with NO header, should be your only response.\n- Work step by step.\n- Check your math."
